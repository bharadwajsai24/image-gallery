[{"C:\\xampp\\htdocs\\Sureify_tasks\\gallery\\src\\index.js":"1","C:\\xampp\\htdocs\\Sureify_tasks\\gallery\\src\\App.js":"2","C:\\xampp\\htdocs\\Sureify_tasks\\gallery\\src\\reportWebVitals.js":"3","C:\\xampp\\htdocs\\Sureify_tasks\\gallery\\src\\routerconfiguration.js":"4","C:\\xampp\\htdocs\\Sureify_tasks\\gallery\\src\\components\\authentication\\login.js":"5","C:\\xampp\\htdocs\\Sureify_tasks\\gallery\\src\\components\\authentication\\registration.js":"6","C:\\xampp\\htdocs\\Sureify_tasks\\gallery\\src\\components\\View\\View.js":"7","C:\\xampp\\htdocs\\Sureify_tasks\\gallery\\src\\components\\View\\Image.js":"8"},{"size":517,"mtime":1611394265971,"results":"9","hashOfConfig":"10"},{"size":213,"mtime":1611394265960,"results":"11","hashOfConfig":"10"},{"size":375,"mtime":1611394265972,"results":"12","hashOfConfig":"10"},{"size":791,"mtime":1611394265978,"results":"13","hashOfConfig":"10"},{"size":4665,"mtime":1611395507806,"results":"14","hashOfConfig":"10"},{"size":2418,"mtime":1611395591327,"results":"15","hashOfConfig":"10"},{"size":2857,"mtime":1611395848768,"results":"16","hashOfConfig":"10"},{"size":256,"mtime":1611395680914,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"1um0tbh",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"20"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36"},"C:\\xampp\\htdocs\\Sureify_tasks\\gallery\\src\\index.js",[],["37","38"],"C:\\xampp\\htdocs\\Sureify_tasks\\gallery\\src\\App.js",[],"C:\\xampp\\htdocs\\Sureify_tasks\\gallery\\src\\reportWebVitals.js",[],"C:\\xampp\\htdocs\\Sureify_tasks\\gallery\\src\\routerconfiguration.js",[],"C:\\xampp\\htdocs\\Sureify_tasks\\gallery\\src\\components\\authentication\\login.js",[],"C:\\xampp\\htdocs\\Sureify_tasks\\gallery\\src\\components\\authentication\\registration.js",[],"C:\\xampp\\htdocs\\Sureify_tasks\\gallery\\src\\components\\View\\View.js",["39","40"],"import './View.css';\r\nimport React from 'react';\r\nimport {useHistory,useLocation} from 'react-router-dom';\r\nimport {useState} from 'react';\r\nimport axios from 'axios';\r\nimport Image from './Image';\r\n\r\nconst View = () => {\r\n\r\n    const history = useHistory();\r\n    const location = useLocation();\r\n\r\n    const [uploadImage,imagehandler]=useState(null);\r\n    const [imageUrl,urlhandler]=useState(location.state.imageurl);\r\n    console.log(\"Bharadwajsai  \"+imageUrl);\r\n\r\n    const onChangeHandler = (e) =>\r\n    {\r\n\r\n        console.log(\"Hi Hello\");\r\n        imagehandler( e.target.files[0] );\r\n        console.log(uploadImage);\r\n\r\n\r\n    }\r\n    const uploading = async () => {\r\n        let form_data = new FormData();\r\n        form_data.append('image',uploadImage);\r\n        form_data.append('email',location.state.email);\r\n        \r\n        const response = await axios({\r\n          url: \"http://localhost:8000/upload\",\r\n          method: \"post\",\r\n          headers: {\r\n            \"Content-Type\": \"multipart/formdata\",\r\n          },\r\n          data: form_data,\r\n        });\r\n    \r\n        if (response.data.status === \"true\") {\r\n          form_data = new FormData();\r\n          form_data.append(\"email\", location.state.email);\r\n    \r\n          const getimageurls = await axios({\r\n            url:\r\n              \"http://localhost/sureify/gallery/php/getimages.php\",\r\n            method: \"post\",\r\n            headers: {\r\n              \"Content-Type\": \"application/x-www-form-urlencoded\",\r\n            },\r\n            data: form_data,\r\n           \r\n          });\r\n          urlhandler(getimageurls.data.urls);\r\n        }\r\n        else\r\n        {\r\n            alert(\"Image Upload Failed\");\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n    const logout = ()=>\r\n    {\r\n        console.log(location.state);\r\n        history.push(\"/login\");\r\n    }\r\n    if (!(location.state && location.state.email)) {\r\n        history.push(\"/login\");\r\n      }\r\n\r\n\r\nreturn (\r\n        <div >\r\n            <div >\r\n            <ul className=\"navbar_ul\">\r\n            <li className=\"navbar_li\"><a className=\"navbar_active\" >Gallery</a></li>\r\n            <li style={{float:\"right\"}} className=\"navbar_li\"><a  onClick={logout} >Logout</a></li>\r\n            </ul>\r\n            </div>\r\n            <div className=\"divname\">\r\n                <input type=\"file\" className=\"form_file\" onChange={onChangeHandler} />\r\n                <br/>\r\n                <input type=\"button\" value=\"Add Image\" className=\"form_button\" onClick={uploading}/>\r\n            </div>\r\n\r\n            <div className=\"image-card\">\r\n            {imageUrl.length > 0 ?\r\n               imageUrl.map((url,index)=>(\r\n                <Image path={url.imagedata} ext={url.extention}/>\r\n            )):<p>Images are yet to upload</p>\r\n            };\r\n                    \r\n            </div>\r\n\r\n        </div>\r\n\r\n\r\n    )\r\n}\r\nexport default View;","C:\\xampp\\htdocs\\Sureify_tasks\\gallery\\src\\components\\View\\Image.js",["41"],"import React from 'react';\r\nimport './Image.css';\r\nconst Image = (props)=>{\r\n\r\n    return (\r\n<div className=\"Image\">\r\n    <img src={`data:image/${props.ext};base64,${props.path}`} className=\"photo\" alt=\"image\" />\r\n</div>\r\n    );\r\n\r\n}\r\nexport default Image;",{"ruleId":"42","replacedBy":"43"},{"ruleId":"44","replacedBy":"45"},{"ruleId":"46","severity":1,"message":"47","line":80,"column":39,"nodeType":"48","endLine":80,"endColumn":69},{"ruleId":"46","severity":1,"message":"47","line":81,"column":63,"nodeType":"48","endLine":81,"endColumn":85},{"ruleId":"49","severity":1,"message":"50","line":7,"column":5,"nodeType":"48","endLine":7,"endColumn":95},"no-native-reassign",["51"],"no-negated-in-lhs",["52"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You donâ€™t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","no-global-assign","no-unsafe-negation"]